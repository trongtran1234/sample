//Author: TrongTran
//Date: 06/03/2019
//Name: Testbench for add 4 bits
`include "add_4bit.v"

module add_4bit_tb ();
// Define parameter
parameter WIDTH = 3;

wire [WIDTH:0]sum;
wire  c_out;
reg clk;
reg rst_n;
reg [WIDTH:0]in_1;
reg [WIDTH:0]in_2;
integer i;
add_4bit # (.WIDTH(WIDTH)) add_4bit_00 (.clk(clk), .rst_n(rst_n), .in_1(in_1), .in_2(in_2),
                                  .sum(sum), .c_out(c_out));
// Monitor the result
initial begin
  $monitor ("Reset = %d, Number[1] = %d, Number[2] = %d, Sum = %d, Carry = %d",
           rst_n, in_1, in_2, sum, c_out);
end

// Initialize test value for 2 inputs
initial begin
clk = 1;
forever #10 clk = ~clk;
end



initial begin
  rst_n = 0;
  for (i = 0; i < 50 ; i = i+1) begin
    in_1 = $random ; // Random the value of in_1
    in_2 = $random ; // Random the value of in_2
    if ( i > 3 ) begin
        rst_n = 1;
    end
    #50;
  end
  $finish;
end

// Dump waveform to monitor signal
initial begin
$vcdplusfile("add_4bit.vpd");
$vcdpluson();
end
endmodule













