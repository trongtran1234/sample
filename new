Cách điều khiển việc on/off power trong việc truyền dữ liệu giữa master và slave.

Trong bài này chúng ta sẽ tìm hiểu cách điều khiển power cho slave và master trong việc truyền dữ liệu.
Vấn đề đặt ra. 
Thường trong 1 chip chúng ta sẽ cần phải power off một số vùng nếu như function vùng này không được sử dụng liên tục nhầm tiết kiệm năng lượng tiêu thụ cho chip. Công nghệ ngày càng phát triển thì việc thiết kế chip có năng lượng tiêu thụ thấp được ưu tiên cao và giúp dễ dàng cạnh tranh trên thị trường.
Tuy nhiên không phải vùng nào cũng có tính năng off power vì có những vùng phải hoạt động liên tục.
Trong bài này ta có một số quy ước như sau:
Vùng power luôn luôn on: gọi là vùng an toàn.
Vùng power có thể on hoặc off: gọi là vùng không an toàn.
Điều này đưa ta đến một số vấn đề trong thiết kế chip cũng như verification như sau:
Dữ liệu được gửi từ vùng an toàn đến vùng không an toàn:
Trường hợp 1: Cả hai vùng đều on
Sẽ không có vấn đề gì.
Trường hợp 2: Vùng an toàn on còn vùng không an toàn off
Có 2 vấn đề được đặt ra. 
Nếu power được off khi data từ vùng không an toàn chưa trả về hết điều này sẽ dẫn đến việc hang up vì phía master (ở vùng an toàn) sẽ luôn đợi tính iệu response từ vùng đã bị power off.
Nếu power được off khi data từ vùng không an toàn đã trả về hết và vùng an toàn tiếp tục gửi thêm request đến vùng đã bị power off. Điều này không sao vì vùng power off sẽ nhận tín hiệu nhưng không transfer đến nhửng module phía sau.
Dữ liệu được gửi từ vùng không an toàn đến vùng an toàn:
Trường hợp 1: Cả hai vùng đều on
Sẽ không có vấn đề gì.
Trường hợp 2: Vùng an toàn on còn vùng không an toàn off
Điều này sẽ không ảnh hưởng đến quá trình thiết kế và mô phỏng.

Như vậy điều mà chúng ta cần quan tâm nhất đó chính là dữ liệu được gửi từ vùng an toàn đến vùng không an toàn. Ta phải điều khiển việc on/off power cho vùng không an toàn sao cho data được trả về cho master đầy đủ sao đó mới được off power.
Giải pháp:
Trong việc thiết kế ngày nay người ta sẽ sữ dụng cặp tín hiệu gọi là isreq và isack để điều khiển việc on/off power cho master và slave.
Nói nôm na như sau:
Isreq: Bộ control sẽ gửi tín hiệu cho phía master và slave rằng nó sẽ off power cho master/slave. Điều này giống như một câu hỏi rằng liệu master/slave có sẵn sang cho việc power off chưa. 
Isack: Phía master và slave sẽ phải thông báo tình hình hiện tại cho bộ control. Ví dụ tại thời điểm nhận tín hiệu slave vẫn chưa trả về master tín hiệu response. Slave sẽ từ chối tiếp tục nhận tín hiệu từ  master và đợi đến khi response trả về đầy đủ. Sau đó slave sẽ gửi thông báo về cho bộ điều khiển rằng nó đã sẵn sàng để off power (Bằng cách thay đổi giá trị tín hiệu).

Trường hợp 1: slave không hỗ trợ trả về thông báo cho master khi nó đã bị power off
Khi isreq = 0, tín hiệu request được chấp nhận khi số lượng buffer chứa request chưa đầy.
Khi isreq = 1, tín hiệu request không được chấp nhận. Và khi số buffer không chứa bất kì data nào, isack trở thành 1.
vài chu kỳ sau khi isreq trở thành 0, isack trở thành 0.

Trường hợp 2: Slave hỗ trợ trả về tín hiệu nhằm thông báo cho master biết nó đang power off
Khi isreq = 0, request được chấp nhận khi số buffer chưa đầy.
Khi isreq = 1 và isack = 0, request không được chấp nhận. Và khi data chứa trong các bộ buffer trở thành 0, isack trở thành 1.
Trong khi isack = 1 hoặc tín hiệu phản hồi lỗi trả về master, SEL_ERR trở thành 1.
Khi SEL_ERR = 1 và yêu cầu đến, request được chấp nhận nhưng không được truyền sang phía lave tiếp theo và phản hồi lỗi (xRESP = 2'b10 (SLVERR)) được trả về.
Một số chu kỳ sau isreq trở thành 0, isack trở thành 0.
Khi isack trở thành 0 và tất cả các phản hồi lỗi được chấp nhận, SEL_ERR trở thành 0.



